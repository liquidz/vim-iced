#!/bin/bash

CWD=$(pwd)
SCRIPT_DIR=$(cd $(dirname $0); pwd)
PROJECT_DIR=$(cd $SCRIPT_DIR; cd ..; pwd)
VERSION=$(grep 'Version: ' ${SCRIPT_DIR}/../doc/vim-iced.txt | cut -d' ' -f2)

IS_LEININGEN=0
IS_BOOT=0
IS_CLOJURE_CLI=0

function iced_usage() {
    echo "vim-iced ${VERSION}"
    echo ""
    echo "Following tasks are available:"
    echo "  repl    Start repl"
    echo "  help    Print this help"
    exit 1
}

function echo_info() {
    echo -e "\e[32mOK\e[m: \e[1m${1}\e[m"
}

function echo_error() {
    echo -e "\e[31mNG\e[m: \e[1m${1}\e[m"
}

if [ $# -lt 1 ]; then
    iced_usage
    exit 1
fi

ARGV=($@)
ARGV=("${ARGV[@]:1}")
OPTIONS=""
for x in ${ARGV[@]}; do
  OPTIONS="${OPTIONS} ${x}"
done

while :
do
    ls project.clj > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        IS_LEININGEN=1
        break
    fi

    ls build.boot > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        IS_BOOT=1
        break
    fi

    ls deps.edn > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        IS_CLOJURE_CLI=1
        break
    fi

    cd ..
    if [ $(pwd) == $CWD ]; then
        break
    else
        CWD=$(pwd)
    fi
done

case "$1" in
    "repl")
        if [ $IS_LEININGEN -eq 1 ];then
            echo_info "Leiningen project is detected"
            lein update-in :dependencies conj '[nrepl "0.5.2"]' -- update-in :dependencies conj '[refactor-nrepl "2.4.0"]' -- update-in :dependencies conj '[cider/cider-nrepl "0.19.0-SNAPSHOT"]' -- update-in :dependencies conj '[cider/piggieback "0.3.10"]' -- update-in :dependencies conj '[iced-nrepl "0.2.11"]' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-complete' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-debug' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-format' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-info' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-macroexpand' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-ns' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-out' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-pprint' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-pprint-fn' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-spec' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-test' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-trace' -- update-in :repl-options:nrepl-middleware conj 'cider.nrepl/wrap-undef' -- update-in :repl-options:nrepl-middleware conj 'cider.piggieback/wrap-cljs-repl' -- update-in :repl-options:nrepl-middleware conj 'refactor-nrepl.middleware/wrap-refactor' -- update-in :repl-options:nrepl-middleware conj 'iced.nrepl/wrap-iced' -- $OPTIONS repl
        elif [ $IS_BOOT -eq 1 ]; then
            echo_info "Boot project is detected"
            boot -i "(require 'cider.tasks)" -d nrepl:0.5.2 -d refactor-nrepl:2.4.0 -d cider/cider-nrepl:0.19.0-SNAPSHOT -d cider/piggieback:0.3.10 -d iced-nrepl:0.2.11 -- cider.tasks/add-middleware -m cider.nrepl/wrap-complete -m cider.nrepl/wrap-debug -m cider.nrepl/wrap-format -m cider.nrepl/wrap-info -m cider.nrepl/wrap-macroexpand -m cider.nrepl/wrap-ns -m cider.nrepl/wrap-out -m cider.nrepl/wrap-pprint -m cider.nrepl/wrap-pprint-fn -m cider.nrepl/wrap-spec -m cider.nrepl/wrap-test -m cider.nrepl/wrap-trace -m cider.nrepl/wrap-undef -m cider.piggieback/wrap-cljs-repl -m refactor-nrepl.middleware/wrap-refactor -m iced.nrepl/wrap-iced -- $OPTIONS repl
        elif [ $IS_CLOJURE_CLI -eq 1 ]; then
            echo_info "Clojure CLI project is detected"
            clojure $OPTIONS -Sdeps "{:deps {iced-repl {:local/root \"${PROJECT_DIR}\"} org.clojure/tools.namespace {:mvn/version \"0.3.0-alpha4\"}}}" -m iced-repl
        else
            echo_error 'Failed to detect clojure project'
            exit 1
        fi
        ;;
    "help")
        iced_usage
        exit 0
        ;;
    *)
        iced_usage
        exit 1
        ;;
esac

exit 0
